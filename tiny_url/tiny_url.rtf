{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0\c84706;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 Shortening URL\cf0 \ulnone \
\
\pard\pardeftab720\partightenfactor0
\cf2 System Requirements\cf0 \
\
\cf2 - should be able to create a short url from a given long url\cf0 \
\cf2 - able to redirect to long url on calling short url\cf0 \
\cf2 - short url should be small like ad.com/\{7 characters\}\cf0 \
\cf2 - we should retain the short url \cf0 \
\cf2 - planning on using a Relational Database\cf0 \
\
\cf2 Entities\cf0 \
\
\cf2 - URL table\cf0 \
\cf2 id shortUrl longUrl\cf0 \
\
\cf2 URL shortening logic\cf0 \
\
\cf2 - Base62\cf0 \
\cf2 it requires a number and it converts it to base62 code\cf0 \
\cf2 we can generate a random number for any given long url and convert it to base62 to be used as short url\cf0 \
\cf2 save the values in DB\cf0 \
\
\cf2 -MD5 Hash\cf0 \
\cf2 converts a string aka our long url to some encoded long value\cf0 \
\cf2 need to fetch starting 7 chars\cf0 \
\cf2 save the values in DB\cf0 \
\
\cf2 DB logic\cf0 \
\
\cf2 for both logic, chances of collision are present\cf0 \
\cf2 -Base62\cf0 \
\cf2 to check collision, INSERT IF NOT EXISTS (can be used only in RDBMS)\cf0 \
\cf2 collision occurs, generate new random number\cf0 \
\cf2 -MD5\cf0 \
\cf2 to check collision, INSERT IF NOT EXISTS (can be used only in RDBMS)\cf0 \
\cf2 collision occurs, add some random string to long URL and then convert to short (not a feasible approach)\cf0 \
\
\cf2 FIX\cf0 \
\cf2 use counter\cf0 \
\cf2 since each count will be new, no need to check before adding short url to DB\cf0 \
\
\cf2 Problems with counter\cf0 \
\cf2 what if service goes down\cf0 \
\cf2 or we need to scale up, how will new/multiple server get control of counter\cf0 \
\
\cf2 the solution to this is an distributed and open-source service called zookeeper\cf0 \
\cf2 it helps in implementing high levels of synchronisation and configuration maintenance\cf0 \
\
\cf2 to further make service better and more consistent\cf0 \
\cf2 add load balancer\cf0 \
\cf2 add caching mechanism\cf0 \
\
\
\cf2 Apis required\cf0 \
\cf2 /shorten : longurl to short URL\cf0 \
\cf2 /redirect : fetch longURL and redirect\cf0 \
\
\
\
}